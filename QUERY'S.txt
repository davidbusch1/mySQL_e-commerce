create database if not exists PROJETO;
use PROJETO;
#drop database PROJETO;



#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#VISUALIZAÇÃO DAS TABELAS

select * from CARGO;

select * from SETOR;

select * from FABRICANTE;

select * from TIPO_SOLICITACAO;

select * from ESTATS;

select * from PAGAMENTO;

select * from CLIENTE;

select * from FUNCIONARIO;

select * from PRODUTO;

select * from PEDIDO
ORDER BY DATA_ENTREGA;

select * from SOLICITACAO;

select * from ITENS_PEDIDO;

select * from CARRINHO;

#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#QUERY'S

#1 EXIBE NOME DO CLIENTE, BEM COMO O NUMERO DO PEDIDO DELE E SUA DATA DE ENTREGA
select NOME, NUMERO, DATA_ENTREGA
from CLIENTE C inner join PEDIDO P
on C.CPF= P.CPF;


#2 EXIBE A LISTA DOS FUNCIONÁRIOS, BEM COMO SEUS RESPECTIVOS SETORES E CARGOS
SELECT F.NOME, S.NOME, CR.NOME
FROM FUNCIONARIO F INNER JOIN SETOR S
ON F.S_CODIGO= S.S_CODIGO
INNER JOIN CARGO CR
ON F.C_CODIGO= CR.C_CODIGO;


#3 EXIBE OS PRODUTOS DISPONÍVEIS NO ACERVO, SEU FABRICANTE E VALOR UNITÁRIO.
SELECT P.TITULO, FC.NOME, FORMAT((P.VALOR),2) AS VALOR
FROM PRODUTO P INNER JOIN FABRICANTE FC
ON P.F_CODIGO= FC.F_CODIGO;


#4 EXIBE OS PRODUTOS DE CADA PEDIDO, VALOR UNITÁRIO DO MESMO, SEU VALOR TOTAL E O TOTAL DA COMPRA
SELECT P.NUMERO, PR.TITULO, IP.P_CODIGO, FORMAT((IP.VALOR_UNIT),2) AS 'VALOR UNITARIO',
FORMAT((IP.VALOR_TOTAL),2) AS 'VALOR TOTAL DO MESMO PRODUTO',FORMAT(( P.VALOR_PEDIDO),2) AS 'VALOR TOTAL DO PEDIDO'
FROM PEDIDO P INNER JOIN ITENS_PEDIDO IP
ON P.NUMERO= IP.NUMERO
INNER JOIN PRODUTO PR
ON IP.P_CODIGO= PR.P_CODIGO;


#5 EXIBE OS PEDIDOS, VALOR TOTAL DE CADA UM, MÉTODO ESCOLHIDO PARA PAGAMENTO E SEU STATUS
SELECT P.NUMERO, FORMAT(( P.VALOR_PEDIDO),2) AS 'VALOR TOTAL DO PEDIDO', METODO, NOME AS 'Status do pedido'
FROM PEDIDO P INNER JOIN PAGAMENTO PG
ON P.PAG_CODIGO= PG.PAG_CODIGO
INNER JOIN ESTATS E
ON P.E_CODIGO= E.E_CODIGO;


#6 EXIBE OS PEDIDOS QUE TIVERAM SOLICITAÇÕES DE TROCA, CANCELAMENTO E DEVOLUÇÃO, A DESCRIÇÃO DO POR QUE E O FUNCIONÁRIO RESPONSÁVEL PELO ATENDIMENTO
SELECT P.NUMERO, TS.TIPO, S.DESCRICAO, F.MATRICULA AS 'Matricula do funcionáriuo resposável pelo atendimento', F.NOME AS 'Funcionáriuo resposável pelo atendimento'
FROM PEDIDO P RIGHT JOIN SOLICITACAO S
ON P.NUMERO= S.NUMERO
LEFT JOIN TIPO_SOLICITACAO TS
ON S.S_CODIGO= TS.S_CODIGO
INNER JOIN FUNCIONARIO F
ON S.MATRICULA= F.MATRICULA
ORDER BY S.DESCRICAO;


#7 EXIBE, DE FORMA DECRESCENTE, OS PRODUTOS MAIS VENDIDOS
SELECT P.P_CODIGO, P.TITULO, IP.QUANTIDADE_ITENS
FROM PRODUTO P INNER JOIN ITENS_PEDIDO IP
ON P.P_CODIGO= IP.P_CODIGO
ORDER BY IP.QUANTIDADE_ITENS desc;


#8 EXIBE A MÉDIA DO VALOR DAS VENDAS POR MÊS
select date_format(DATA_PEDIDO, '%M')AS 'Mês', FORMAT(avg(VALOR_PEDIDO),2) AS 'Média do valor vendido no mês'
FROM PEDIDO
group by month(DATA_PEDIDO);


#9 EXIBE QUAIS CLIENTES FIZERAM COMPRAS ACIMA DE R$300,00
SELECT C.NOME, P.NUMERO, FORMAT((P.VALOR_PEDIDO),2) AS 'VALOR DO PEDIDO'
FROM CLIENTE C INNER JOIN PEDIDO P
ON C.CPF= P.CPF
WHERE VALOR_PEDIDO > 300
ORDER BY P.VALOR_PEDIDO DESC;


#UPDATES
#10 REALIZA A TROCA DA DATA DE ENTREGA DOS PEDIDOS QUE ESTAVAM "AGUARDANDO APROVAÇÃO", PARA DIA 27/01/2021
UPDATE PEDIDO 
SET DATA_ENTREGA='2021-01-27'
WHERE E_CODIGO='00000001';

# REALIZA A TROCA DO STATUS DO PEDIDO DE "AGUARDANDO APROVAÇÃO" PARA "APROVADO"
UPDATE PEDIDO
SET E_CODIGO = '00000002'
WHERE E_CODIGO = '00000001';


#11 FUNÇÃO CRIADA PARA DAR DESCONTO QUANDO O PEDIDO TIVER ACIMA DE 3 PRODUTOS IGUAIS
DELIMITER &&
CREATE FUNCTION fn_desconto (A DECIMAL(10,2), B DECIMAL(10,2))
RETURNS FLOAT
NO SQL
 BEGIN
     RETURN A - B;
 END&&
DELIMITER ;


#12 SELECT QUE EXIBE O NOME DO OBJETO, VALOR TOTAL DO PEDIDO, VALOR TOTAL COM DESCONTO DE R$50,00 PARA COMPRAS COM MAIS DE 2 PRODUTOS IGUAIS E A QUANTIDADE DOS ITENS
SELECT PR.TITULO as 'Nome do produto', FORMAT((P.VALOR_PEDIDO),2) AS 'Valor integral do pedido', FORMAT((fn_desconto (P.VALOR_PEDIDO, 50.00)),2)
as 'Valor do pedido com desconto de R$50,00 para vendas de 3 produtos iguais',
IP.QUANTIDADE_ITENS 'Quantidade de itens'
FROM PRODUTO PR INNER JOIN ITENS_PEDIDO IP
ON PR.P_CODIGO = IP.P_CODIGO
INNER JOIN PEDIDO P
ON IP.NUMERO = P.NUMERO
WHERE IP.QUANTIDADE_ITENS = 3;


#13 SELECT QUE EXIBE O NOME DO OBJETO, VALOR TOTAL DO PEDIDO, VALOR TOTAL COM DESCONTO DE R$95,90 PARA COMPRAS COM MAIS DE 3 PRODUTOS IGUAIS E A QUANTIDADE DOS ITENS
SELECT PR.TITULO AS 'Nome do produto', FORMAT((P.VALOR_PEDIDO),2) AS 'Valor integral do pedido', FORMAT((fn_desconto (P.VALOR_PEDIDO, 95.90)),2)
as 'Valor do pedido com desconto de R$95,00 para vendas de 5 produtos iguais',
IP.QUANTIDADE_ITENS AS 'Quantidade de itens'
FROM PRODUTO PR INNER JOIN ITENS_PEDIDO IP
ON PR.P_CODIGO = IP.P_CODIGO
INNER JOIN PEDIDO P
ON IP.NUMERO = P.NUMERO
WHERE IP.QUANTIDADE_ITENS = 5;


#14 CRIAÇÃO DE UM PROCEDIMENTO QUE EXIBE O NOME DO CLIENTE, SEU CPF, DATA DA REALIZAÇÃO DO PEDIDO E O VALOR TOTAL DELE.
DELIMITER $$
CREATE PROCEDURE `PedidoCliente` (IDCPF CHAR(14))
    BEGIN
        SELECT C.NOME, C.CPF, P.DATA_PEDIDO AS 'DATA DO PEDIDO', format((P.VALOR_PEDIDO),2) AS 'VALOR DO PEDIDO'
        FROM CLIENTE C
        INNER JOIN PEDIDO P
        ON C.CPF = P.CPF
        WHERE C.CPF = IDCPF;
    END $$
DELIMITER ;


#15 CHAMADAS DO PROCEDIMENTO DE NÚMERO 14
CALL PedidoCliente (42096321042);

CALL PedidoCliente (93808274077);

CALL PedidoCliente (65438838046);

CALL PedidoCliente (60975363050);

CALL PedidoCliente (68614298056);


#16 CRIAÇÃO DE PROCEDIMENTO QUE EXIBE O TÍTULO DO PRODUTO, QUANTIDADE DE PRODUTOS COMPRADOS NO PEDIDO, VALOR UNITÁRIO, VALOR TOTAL DESSE PRODUTO NO PEDIDO E O NÚMERO DESTE PEDIDO.
DELIMITER //
CREATE PROCEDURE `DadosProdutos` (IDPEDIDO CHAR(10))
    BEGIN
        SELECT PR.TITULO AS 'NOME DO PRODUTO', IP.QUANTIDADE_ITENS AS 'QUANTIDADE DE ITENS DO MESMO PRODUTO NO PEDIDO',
        FORMAT((IP.VALOR_UNIT),2) AS 'VALOR UNITÁRIO DO PRODUTO',
        FORMAT((IP.VALOR_TOTAL),2) AS 'VALOR DO PEDIDO', P.NUMERO AS 'NÚMERO DO PEDIDO'
        FROM PRODUTO PR INNER JOIN ITENS_PEDIDO IP
        ON PR.P_CODIGO = IP.P_CODIGO
        INNER JOIN PEDIDO P
        ON P.NUMERO = IP.NUMERO
        WHERE PR.P_CODIGO = IDPEDIDO
        LIMIT 1;
    END //
DELIMITER ;


#17 CHAMADAS DO PROCEDIMENTO DE NUMERO 16
CALL DadosProdutos ('0000000001');

CALL DadosProdutos ('0000000003');

CALL DadosProdutos ('0000000005');

CALL DadosProdutos ('0000000007');

CALL DadosProdutos ('0000000009');
		
        
#18 CRIAÇÃO DE UMA VIEW QUE SELECIONA AS TABELAS PEDIDO, SOLICITAÇÃO E FUNCIONÁRIO
CREATE VIEW vwSolicitacoes AS
SELECT P.NUMERO, TS.TIPO, S.DESCRICAO, F.MATRICULA, F.NOME
FROM PEDIDO P RIGHT JOIN SOLICITACAO S
ON P.NUMERO= S.NUMERO
LEFT JOIN TIPO_SOLICITACAO TS
ON S.S_CODIGO= TS.S_CODIGO
INNER JOIN FUNCIONARIO F
ON S.MATRICULA= F.MATRICULA;


#19 SELECIONA E EXIBE TODOS OS DADOS DA VIEW 18
select * from vwSolicitacoes;

# SELECIONA E EXIBE OS DADOS DO NÚMERO DO PEDIDO E O TIPO DA SOLICITAÇÃO
select NUMERO AS 'Número do pedido', TIPO AS 'Tipo da Solicitação', DESCRICAO
from vwSolicitacoes;

# SELECIONA E EXIBE OS DADOS DA MATRÍCULA DO FUNCIONÁRIO E SEU NOME
select MATRICULA AS 'Matricula do funcionário resposável pelo atendimento',NOME AS 'Funcionáriuo resposável pelo atendimento'
FROM vwSolicitacoes


#20 CRIANÇÃO DA FUNÇÃO QUE AUMENTA O VALOR DO PRODUTO, DEVIDO AO AUMENTO DA MATÉRIA PRIMA
DELIMITER &&
CREATE FUNCTION fn_AUMENTO (VALOR DECIMAL(10,2), TAXA DECIMAL(10,2))
RETURNS FLOAT
NO SQL
 BEGIN
     RETURN VALOR + (VALOR * TAXA / 100);
 END&&
DELIMITER ;


#21 EXIBE O NOME DO PRODUTO, SEU VALOR ANTES DO AUMENTO E PÓS AUMENTO DE 15%
SELECT PR.TITULO as 'Nome do produto', FORMAT((PR.VALOR),2) AS 'Valor integral do produto', FORMAT((fn_AUMENTO (PR.VALOR, 15.00)),2)
as 'Valor do produto com aumento de 15% após aumento do custo do material para revenda'
FROM PRODUTO;


#22 EXIBE O NOME DO PRODUTO, SEU VALOR ANTES DO AUMENTO E PÓS AUMENTO DE 12,5%
SELECT TITULO as 'Nome do produto', FORMAT((VALOR),2) AS 'Valor integral do produto', FORMAT((fn_AUMENTO (VALOR, 12.50)),2)
as 'Valor do produto com aumento de 12,50% após aumento do custo do material para revenda'
FROM PRODUTO;


# INSERÇÕES REALIZADAS PARA CONTINUAÇÃO DA FUNÇÃO A SEGUIR:
insert into PEDIDO
values ('256897453',NULL,'2021-01-09','05804287028','00000001','00000006','00000001','499.50'),
	   ('509475998',NULL,'2021-01-09','05804287028','00000001','00000008','00000001','499.50');
       
       
insert into ITENS_PEDIDO
values ('01','2','99.90','199.80','0000000004','256897453'),
	   ('01','1','300.00','300.00','0000000007','509475998');
       
       
#23 CRIA PROCEDIMENTO QUE EXIBE OS PEDIDOS REALIZADOS E SEUS RESPECTIVOS STATUS
DELIMITER %%
CREATE PROCEDURE ExibeStatusPagamentoPedido ()
   BEGIN
        SELECT C.NOME AS 'NOME DO CLIENTE', PG.METODO AS 'FORMA DE PAGAMENTO',
        P.NUMERO AS 'NÚMERO DO PEDIDO', P.E_CODIGO, ES.NOME AS 'STATUS DO PEDIDO'
        FROM CLIENTE C INNER JOIN PEDIDO P
        ON C.CPF = P.CPF
        INNER JOIN PAGAMENTO PG
        ON P.PAG_CODIGO = PG.PAG_CODIGO
        INNER JOIN ESTATS ES
        ON ES.E_CODIGO = P.E_CODIGO;
    END %%
DELIMITER ;

# CHAMADA DO PROCEDIMENTO 23        
CALL ExibeStatusPagamentoPedido;

       